<?php
/**
 * ResponseE911CDRDetailCallDetailList
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Inteliquent Services API
 *
 * &nbsp; ## Introduction This document explains how to access and use the Inteliquent Services API to integrate your applications with Inteliquent’s for automated processing of telephone number, port-in, and order management operations. <br> Only RESTful protocol is supported (the Services API accepts information in JSON format). Use the following URLs to make API calls:<br> <ul>  <li>Production: https://services.inteliquent.com<br>  <li>Sandbox: https://services-sandbox.inteliquent.com (please use this environment for initial integration testing) </ul> ## Accounts and Access Request an account from Inteliquent (portal.support@inteliquent.com) for the production and sandbox API environments. After an account has been created and API access is enabled for your company, you can retrieve your company’s key and secret from the Admin section of the customer portal for the appropriate environment. <p>Access the portal using the following URLs: <ul> <li> Production: https://portal.inteliquent.com <li> Sandbox: https://portal-sandbox.inteliquent.com </ul> ### Security The Inteliquent Services API accepts HTTPS connections using TLS version 1.2. ### Authentication Two forms of authentication are supported by Services API:<br> <ul>  <li>OAuth2 Authentication and Authorization<br>  <li>Basic Authentication<br> </ul> <br><br> &nbsp; ### OAuth 2.0 <br><br> OAuth 2.0 is the authentication and authorization mechanism for the Inteliquent Services API. Your application must pass the correct token in the HTTP header to make API calls to Inteliquent. <br> Your application can request a token from the Inteliquent Token Generator with your consumer key and secret, as shown below. Tokens expire after one hour.<br><br> <b>Example Request (using curl):</b><br> <code>curl -X POST -H \"Content-Type:application/x-www-form-urlencoded\" –H \"charset:UTF-8\" https://services-token.inteliquent.com/oauth2/token --insecure --data \"client_id=YOURCONSUMERKEY&client_secret=YOURCONSUMERSECRET&grant_type=client_credentials\"</code><br> <b>Example Response:</b><br> <code>{\"scope\":\"am_application_scope default\",\"token_type\":\"bearer\",\"expires_in\":9223372036854775807,\"access_token\":\"a12b34567c89012def34g56789hi0j12\"}</code><br><br> Note- Substitute “services-token-sandbox” for “services-token” in the above URL to retrieve your token for the sandbox environment. <br><br> &nbsp; ### Authorization <br><br>  You must provide the token as part of the HTTP Header each time you make an API call.<br> When your application calls the Inteliquent services API, the API first validates that the OAuth2.0 token is valid. If so, the service call will be executed. If not, the following error message will be returned: <br> <code> <ams:fault xmlns:ams=\"http://wso2.org/apimanager/security\"> <ams:code>900901</ams:code> <ams:message>Invalid Credentials</ams:message> <ams:description>Access failure for API: /Services/2.0.0, version: 2.0.0 with key: Abcd1FghIjK23l4mno5pqrX6yzab. Make sure you have given the correct access token</ams:description> </ams:fault></code> <br><br> &nbsp; ### Basic Authentication <br><br> You can use your API Key and Secret to set the Basic Authorization header.<br><br> <b> Example Request: </b> <br> Authorization: Basic Base64 encoded(Key:Secret)  <br><br> When your application calls the Inteliquent Services API, the API first validates that the Basic Auth is valid. If so, the service call will be executed. If not, the following error message will be returned:<br><br> { \"message\": \"Invalid authentication information provided\", \"status\": \"Invalid credentials\", \"statusCode\": \"401001\", \"timestamp\": \"2019-12-10T14:07:32.310-0600\" } <br><br> &nbsp;
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: portal.support@inteliquent.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ResponseE911CDRDetailCallDetailList Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class ResponseE911CDRDetailCallDetailList implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ResponseE911CDRDetail_callDetailList';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'source_tn' => 'string',
        'call_date' => 'string',
        'call_type' => 'string',
        'call_status' => 'string',
        'call_destination' => 'string',
        'call_provisioned' => 'string',
        'call_duration' => 'string',
        'name' => 'string',
        'street_num' => 'string',
        'street_info' => 'string',
        'location' => 'string',
        'city' => 'string',
        'state' => 'string',
        'postal_code' => 'string',
        'call_terminated' => 'string',
        'sip_call_id' => 'string',
        'via_header' => 'string',
        'incoming_dnis' => 'string',
        'incoming_from' => 'string',
        'incoming_contact' => 'string',
        'incoming_pai' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'source_tn' => null,
        'call_date' => null,
        'call_type' => null,
        'call_status' => null,
        'call_destination' => null,
        'call_provisioned' => null,
        'call_duration' => null,
        'name' => null,
        'street_num' => null,
        'street_info' => null,
        'location' => null,
        'city' => null,
        'state' => null,
        'postal_code' => null,
        'call_terminated' => null,
        'sip_call_id' => null,
        'via_header' => null,
        'incoming_dnis' => null,
        'incoming_from' => null,
        'incoming_contact' => null,
        'incoming_pai' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'source_tn' => 'sourceTn',
        'call_date' => 'callDate',
        'call_type' => 'callType',
        'call_status' => 'callStatus',
        'call_destination' => 'callDestination',
        'call_provisioned' => 'callProvisioned',
        'call_duration' => 'callDuration',
        'name' => 'name',
        'street_num' => 'streetNum',
        'street_info' => 'streetInfo',
        'location' => 'location',
        'city' => 'city',
        'state' => 'state',
        'postal_code' => 'postalCode',
        'call_terminated' => 'callTerminated',
        'sip_call_id' => 'sipCallId',
        'via_header' => 'viaHeader',
        'incoming_dnis' => 'incomingDnis',
        'incoming_from' => 'incomingFrom',
        'incoming_contact' => 'incomingContact',
        'incoming_pai' => 'incomingPai'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'source_tn' => 'setSourceTn',
        'call_date' => 'setCallDate',
        'call_type' => 'setCallType',
        'call_status' => 'setCallStatus',
        'call_destination' => 'setCallDestination',
        'call_provisioned' => 'setCallProvisioned',
        'call_duration' => 'setCallDuration',
        'name' => 'setName',
        'street_num' => 'setStreetNum',
        'street_info' => 'setStreetInfo',
        'location' => 'setLocation',
        'city' => 'setCity',
        'state' => 'setState',
        'postal_code' => 'setPostalCode',
        'call_terminated' => 'setCallTerminated',
        'sip_call_id' => 'setSipCallId',
        'via_header' => 'setViaHeader',
        'incoming_dnis' => 'setIncomingDnis',
        'incoming_from' => 'setIncomingFrom',
        'incoming_contact' => 'setIncomingContact',
        'incoming_pai' => 'setIncomingPai'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'source_tn' => 'getSourceTn',
        'call_date' => 'getCallDate',
        'call_type' => 'getCallType',
        'call_status' => 'getCallStatus',
        'call_destination' => 'getCallDestination',
        'call_provisioned' => 'getCallProvisioned',
        'call_duration' => 'getCallDuration',
        'name' => 'getName',
        'street_num' => 'getStreetNum',
        'street_info' => 'getStreetInfo',
        'location' => 'getLocation',
        'city' => 'getCity',
        'state' => 'getState',
        'postal_code' => 'getPostalCode',
        'call_terminated' => 'getCallTerminated',
        'sip_call_id' => 'getSipCallId',
        'via_header' => 'getViaHeader',
        'incoming_dnis' => 'getIncomingDnis',
        'incoming_from' => 'getIncomingFrom',
        'incoming_contact' => 'getIncomingContact',
        'incoming_pai' => 'getIncomingPai'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['source_tn'] = $data['source_tn'] ?? null;
        $this->container['call_date'] = $data['call_date'] ?? null;
        $this->container['call_type'] = $data['call_type'] ?? null;
        $this->container['call_status'] = $data['call_status'] ?? null;
        $this->container['call_destination'] = $data['call_destination'] ?? null;
        $this->container['call_provisioned'] = $data['call_provisioned'] ?? null;
        $this->container['call_duration'] = $data['call_duration'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['street_num'] = $data['street_num'] ?? null;
        $this->container['street_info'] = $data['street_info'] ?? null;
        $this->container['location'] = $data['location'] ?? null;
        $this->container['city'] = $data['city'] ?? null;
        $this->container['state'] = $data['state'] ?? null;
        $this->container['postal_code'] = $data['postal_code'] ?? null;
        $this->container['call_terminated'] = $data['call_terminated'] ?? null;
        $this->container['sip_call_id'] = $data['sip_call_id'] ?? null;
        $this->container['via_header'] = $data['via_header'] ?? null;
        $this->container['incoming_dnis'] = $data['incoming_dnis'] ?? null;
        $this->container['incoming_from'] = $data['incoming_from'] ?? null;
        $this->container['incoming_contact'] = $data['incoming_contact'] ?? null;
        $this->container['incoming_pai'] = $data['incoming_pai'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets source_tn
     *
     * @return string|null
     */
    public function getSourceTn()
    {
        return $this->container['source_tn'];
    }

    /**
     * Sets source_tn
     *
     * @param string|null $source_tn Telephone Number
     *
     * @return self
     */
    public function setSourceTn($source_tn)
    {
        $this->container['source_tn'] = $source_tn;

        return $this;
    }

    /**
     * Gets call_date
     *
     * @return string|null
     */
    public function getCallDate()
    {
        return $this->container['call_date'];
    }

    /**
     * Sets call_date
     *
     * @param string|null $call_date Call date and timestamp
     *
     * @return self
     */
    public function setCallDate($call_date)
    {
        $this->container['call_date'] = $call_date;

        return $this;
    }

    /**
     * Gets call_type
     *
     * @return string|null
     */
    public function getCallType()
    {
        return $this->container['call_type'];
    }

    /**
     * Sets call_type
     *
     * @param string|null $call_type call type like test or 911
     *
     * @return self
     */
    public function setCallType($call_type)
    {
        $this->container['call_type'] = $call_type;

        return $this;
    }

    /**
     * Gets call_status
     *
     * @return string|null
     */
    public function getCallStatus()
    {
        return $this->container['call_status'];
    }

    /**
     * Sets call_status
     *
     * @param string|null $call_status Call Status (e.g. Completed, Cancelled or Failed)
     *
     * @return self
     */
    public function setCallStatus($call_status)
    {
        $this->container['call_status'] = $call_status;

        return $this;
    }

    /**
     * Gets call_destination
     *
     * @return string|null
     */
    public function getCallDestination()
    {
        return $this->container['call_destination'];
    }

    /**
     * Sets call_destination
     *
     * @param string|null $call_destination Call Destination (e.g. Test,PSAP,PSAP - 10 Digit or Callcenter)
     *
     * @return self
     */
    public function setCallDestination($call_destination)
    {
        $this->container['call_destination'] = $call_destination;

        return $this;
    }

    /**
     * Gets call_provisioned
     *
     * @return string|null
     */
    public function getCallProvisioned()
    {
        return $this->container['call_provisioned'];
    }

    /**
     * Sets call_provisioned
     *
     * @param string|null $call_provisioned Call Provisioned (e.g. Yes or No)
     *
     * @return self
     */
    public function setCallProvisioned($call_provisioned)
    {
        $this->container['call_provisioned'] = $call_provisioned;

        return $this;
    }

    /**
     * Gets call_duration
     *
     * @return string|null
     */
    public function getCallDuration()
    {
        return $this->container['call_duration'];
    }

    /**
     * Sets call_duration
     *
     * @param string|null $call_duration Call Duration (e.g. 31.33)
     *
     * @return self
     */
    public function setCallDuration($call_duration)
    {
        $this->container['call_duration'] = $call_duration;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name Name of E911 Address
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets street_num
     *
     * @return string|null
     */
    public function getStreetNum()
    {
        return $this->container['street_num'];
    }

    /**
     * Sets street_num
     *
     * @param string|null $street_num E911 address street number (e.g. 100, 550
     *
     * @return self
     */
    public function setStreetNum($street_num)
    {
        $this->container['street_num'] = $street_num;

        return $this;
    }

    /**
     * Gets street_info
     *
     * @return string|null
     */
    public function getStreetInfo()
    {
        return $this->container['street_info'];
    }

    /**
     * Sets street_info
     *
     * @param string|null $street_info E911 address street information (e.g. W Adams St)
     *
     * @return self
     */
    public function setStreetInfo($street_info)
    {
        $this->container['street_info'] = $street_info;

        return $this;
    }

    /**
     * Gets location
     *
     * @return string|null
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param string|null $location E911 address additional address infotmation
     *
     * @return self
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string|null
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string|null $city E911 address city
     *
     * @return self
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string|null
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string|null $state E911 address state
     *
     * @return self
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets postal_code
     *
     * @return string|null
     */
    public function getPostalCode()
    {
        return $this->container['postal_code'];
    }

    /**
     * Sets postal_code
     *
     * @param string|null $postal_code E911 address zip code
     *
     * @return self
     */
    public function setPostalCode($postal_code)
    {
        $this->container['postal_code'] = $postal_code;

        return $this;
    }

    /**
     * Gets call_terminated
     *
     * @return string|null
     */
    public function getCallTerminated()
    {
        return $this->container['call_terminated'];
    }

    /**
     * Sets call_terminated
     *
     * @param string|null $call_terminated Call Terminated date and timestamp
     *
     * @return self
     */
    public function setCallTerminated($call_terminated)
    {
        $this->container['call_terminated'] = $call_terminated;

        return $this;
    }

    /**
     * Gets sip_call_id
     *
     * @return string|null
     */
    public function getSipCallId()
    {
        return $this->container['sip_call_id'];
    }

    /**
     * Sets sip_call_id
     *
     * @param string|null $sip_call_id CDR Call ID
     *
     * @return self
     */
    public function setSipCallId($sip_call_id)
    {
        $this->container['sip_call_id'] = $sip_call_id;

        return $this;
    }

    /**
     * Gets via_header
     *
     * @return string|null
     */
    public function getViaHeader()
    {
        return $this->container['via_header'];
    }

    /**
     * Sets via_header
     *
     * @param string|null $via_header via Header information
     *
     * @return self
     */
    public function setViaHeader($via_header)
    {
        $this->container['via_header'] = $via_header;

        return $this;
    }

    /**
     * Gets incoming_dnis
     *
     * @return string|null
     */
    public function getIncomingDnis()
    {
        return $this->container['incoming_dnis'];
    }

    /**
     * Sets incoming_dnis
     *
     * @param string|null $incoming_dnis CDR SIP Req URI User/Host
     *
     * @return self
     */
    public function setIncomingDnis($incoming_dnis)
    {
        $this->container['incoming_dnis'] = $incoming_dnis;

        return $this;
    }

    /**
     * Gets incoming_from
     *
     * @return string|null
     */
    public function getIncomingFrom()
    {
        return $this->container['incoming_from'];
    }

    /**
     * Sets incoming_from
     *
     * @param string|null $incoming_from CDR From
     *
     * @return self
     */
    public function setIncomingFrom($incoming_from)
    {
        $this->container['incoming_from'] = $incoming_from;

        return $this;
    }

    /**
     * Gets incoming_contact
     *
     * @return string|null
     */
    public function getIncomingContact()
    {
        return $this->container['incoming_contact'];
    }

    /**
     * Sets incoming_contact
     *
     * @param string|null $incoming_contact CDR Invite Contact Header
     *
     * @return self
     */
    public function setIncomingContact($incoming_contact)
    {
        $this->container['incoming_contact'] = $incoming_contact;

        return $this;
    }

    /**
     * Gets incoming_pai
     *
     * @return string|null
     */
    public function getIncomingPai()
    {
        return $this->container['incoming_pai'];
    }

    /**
     * Sets incoming_pai
     *
     * @param string|null $incoming_pai CDR SIP URI PAI User/Host
     *
     * @return self
     */
    public function setIncomingPai($incoming_pai)
    {
        $this->container['incoming_pai'] = $incoming_pai;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


