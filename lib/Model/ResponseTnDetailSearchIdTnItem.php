<?php
/**
 * ResponseTnDetailSearchIdTnItem
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Inteliquent Services API
 *
 * &nbsp; ## Introduction This document explains how to access and use the Inteliquent Services API to integrate your applications with Inteliquent’s for automated processing of telephone number, port-in, and order management operations. <br> Only RESTful protocol is supported (the Services API accepts information in JSON format). Use the following URLs to make API calls:<br> <ul>  <li>Production: https://services.inteliquent.com<br>  <li>Sandbox: https://services-sandbox.inteliquent.com (please use this environment for initial integration testing) </ul> ## Accounts and Access Request an account from Inteliquent (portal.support@inteliquent.com) for the production and sandbox API environments. After an account has been created and API access is enabled for your company, you can retrieve your company’s key and secret from the Admin section of the customer portal for the appropriate environment. <p>Access the portal using the following URLs: <ul> <li> Production: https://portal.inteliquent.com <li> Sandbox: https://portal-sandbox.inteliquent.com </ul> ### Security The Inteliquent Services API accepts HTTPS connections using TLS version 1.2. ### Authentication Two forms of authentication are supported by Services API:<br> <ul>  <li>OAuth2 Authentication and Authorization<br>  <li>Basic Authentication<br> </ul> <br><br> &nbsp; ### OAuth 2.0 <br><br> OAuth 2.0 is the authentication and authorization mechanism for the Inteliquent Services API. Your application must pass the correct token in the HTTP header to make API calls to Inteliquent. <br> Your application can request a token from the Inteliquent Token Generator with your consumer key and secret, as shown below. Tokens expire after one hour.<br><br> <b>Example Request (using curl):</b><br> <code>curl -X POST -H \"Content-Type:application/x-www-form-urlencoded\" –H \"charset:UTF-8\" https://services-token.inteliquent.com/oauth2/token --insecure --data \"client_id=YOURCONSUMERKEY&client_secret=YOURCONSUMERSECRET&grant_type=client_credentials\"</code><br> <b>Example Response:</b><br> <code>{\"scope\":\"am_application_scope default\",\"token_type\":\"bearer\",\"expires_in\":9223372036854775807,\"access_token\":\"a12b34567c89012def34g56789hi0j12\"}</code><br><br> Note- Substitute “services-token-sandbox” for “services-token” in the above URL to retrieve your token for the sandbox environment. <br><br> &nbsp; ### Authorization <br><br>  You must provide the token as part of the HTTP Header each time you make an API call.<br> When your application calls the Inteliquent services API, the API first validates that the OAuth2.0 token is valid. If so, the service call will be executed. If not, the following error message will be returned: <br> <code> <ams:fault xmlns:ams=\"http://wso2.org/apimanager/security\"> <ams:code>900901</ams:code> <ams:message>Invalid Credentials</ams:message> <ams:description>Access failure for API: /Services/2.0.0, version: 2.0.0 with key: Abcd1FghIjK23l4mno5pqrX6yzab. Make sure you have given the correct access token</ams:description> </ams:fault></code> <br><br> &nbsp; ### Basic Authentication <br><br> You can use your API Key and Secret to set the Basic Authorization header.<br><br> <b> Example Request: </b> <br> Authorization: Basic Base64 encoded(Key:Secret)  <br><br> When your application calls the Inteliquent Services API, the API first validates that the Basic Auth is valid. If so, the service call will be executed. If not, the following error message will be returned:<br><br> { \"message\": \"Invalid authentication information provided\", \"status\": \"Invalid credentials\", \"statusCode\": \"401001\", \"timestamp\": \"2019-12-10T14:07:32.310-0600\" } <br><br> &nbsp;
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: portal.support@inteliquent.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ResponseTnDetailSearchIdTnItem Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class ResponseTnDetailSearchIdTnItem implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ResponseTnDetail_searchId_tnItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'tn' => 'string',
        'rate_center' => 'string',
        'trunk_group' => 'string',
        'routing_option' => 'string',
        'customer_routing_option' => 'string',
        'province' => 'string',
        'tn_status' => 'string',
        'loc_name' => 'string',
        'rate_center_tier' => 'string',
        'lata' => 'string',
        'country_code' => 'string',
        'tn_source' => 'string',
        'activate_date' => 'string',
        'activate_user' => 'string',
        'port_out_pin' => 'string',
        'tn_note' => 'string',
        'tn_mgmt_party_role_id' => 'string',
        'tn_mgmt_name' => 'string',
        'is_on_net' => 'string',
        'allow_cnam' => 'string',
        'allow_dl' => 'string',
        'allow_e911' => 'string',
        'allow_msg' => 'string',
        'allow_port_out_pin' => 'string',
        'portout_notification' => 'string',
        'wireless' => 'string',
        'dno' => 'string',
        'alt_spid' => 'string',
        'end_user' => '\OpenAPI\Client\Model\PortInMessagingOrderPortInMessagingOrderTnListEndUser',
        'tn_feature' => '\OpenAPI\Client\Model\ResponseTnDetailSearchIdTnFeature'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'tn' => null,
        'rate_center' => null,
        'trunk_group' => null,
        'routing_option' => null,
        'customer_routing_option' => null,
        'province' => null,
        'tn_status' => null,
        'loc_name' => null,
        'rate_center_tier' => null,
        'lata' => null,
        'country_code' => null,
        'tn_source' => null,
        'activate_date' => null,
        'activate_user' => null,
        'port_out_pin' => null,
        'tn_note' => null,
        'tn_mgmt_party_role_id' => null,
        'tn_mgmt_name' => null,
        'is_on_net' => null,
        'allow_cnam' => null,
        'allow_dl' => null,
        'allow_e911' => null,
        'allow_msg' => null,
        'allow_port_out_pin' => null,
        'portout_notification' => null,
        'wireless' => null,
        'dno' => null,
        'alt_spid' => null,
        'end_user' => null,
        'tn_feature' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'tn' => 'tn',
        'rate_center' => 'rateCenter',
        'trunk_group' => 'trunkGroup',
        'routing_option' => 'routingOption',
        'customer_routing_option' => 'customerRoutingOption',
        'province' => 'province',
        'tn_status' => 'tnStatus',
        'loc_name' => 'locName',
        'rate_center_tier' => 'rateCenterTier',
        'lata' => 'lata',
        'country_code' => 'countryCode',
        'tn_source' => 'tnSource',
        'activate_date' => 'activateDate',
        'activate_user' => 'activateUser',
        'port_out_pin' => 'portOutPin',
        'tn_note' => 'tnNote',
        'tn_mgmt_party_role_id' => 'tnMgmtPartyRoleId',
        'tn_mgmt_name' => 'tnMgmtName',
        'is_on_net' => 'isOnNet',
        'allow_cnam' => 'allowCnam',
        'allow_dl' => 'allowDl',
        'allow_e911' => 'allowE911',
        'allow_msg' => 'allowMsg',
        'allow_port_out_pin' => 'allowPortOutPin',
        'portout_notification' => 'portoutNotification',
        'wireless' => 'wireless',
        'dno' => 'dno',
        'alt_spid' => 'altSpid',
        'end_user' => 'endUser',
        'tn_feature' => 'tnFeature'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'tn' => 'setTn',
        'rate_center' => 'setRateCenter',
        'trunk_group' => 'setTrunkGroup',
        'routing_option' => 'setRoutingOption',
        'customer_routing_option' => 'setCustomerRoutingOption',
        'province' => 'setProvince',
        'tn_status' => 'setTnStatus',
        'loc_name' => 'setLocName',
        'rate_center_tier' => 'setRateCenterTier',
        'lata' => 'setLata',
        'country_code' => 'setCountryCode',
        'tn_source' => 'setTnSource',
        'activate_date' => 'setActivateDate',
        'activate_user' => 'setActivateUser',
        'port_out_pin' => 'setPortOutPin',
        'tn_note' => 'setTnNote',
        'tn_mgmt_party_role_id' => 'setTnMgmtPartyRoleId',
        'tn_mgmt_name' => 'setTnMgmtName',
        'is_on_net' => 'setIsOnNet',
        'allow_cnam' => 'setAllowCnam',
        'allow_dl' => 'setAllowDl',
        'allow_e911' => 'setAllowE911',
        'allow_msg' => 'setAllowMsg',
        'allow_port_out_pin' => 'setAllowPortOutPin',
        'portout_notification' => 'setPortoutNotification',
        'wireless' => 'setWireless',
        'dno' => 'setDno',
        'alt_spid' => 'setAltSpid',
        'end_user' => 'setEndUser',
        'tn_feature' => 'setTnFeature'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'tn' => 'getTn',
        'rate_center' => 'getRateCenter',
        'trunk_group' => 'getTrunkGroup',
        'routing_option' => 'getRoutingOption',
        'customer_routing_option' => 'getCustomerRoutingOption',
        'province' => 'getProvince',
        'tn_status' => 'getTnStatus',
        'loc_name' => 'getLocName',
        'rate_center_tier' => 'getRateCenterTier',
        'lata' => 'getLata',
        'country_code' => 'getCountryCode',
        'tn_source' => 'getTnSource',
        'activate_date' => 'getActivateDate',
        'activate_user' => 'getActivateUser',
        'port_out_pin' => 'getPortOutPin',
        'tn_note' => 'getTnNote',
        'tn_mgmt_party_role_id' => 'getTnMgmtPartyRoleId',
        'tn_mgmt_name' => 'getTnMgmtName',
        'is_on_net' => 'getIsOnNet',
        'allow_cnam' => 'getAllowCnam',
        'allow_dl' => 'getAllowDl',
        'allow_e911' => 'getAllowE911',
        'allow_msg' => 'getAllowMsg',
        'allow_port_out_pin' => 'getAllowPortOutPin',
        'portout_notification' => 'getPortoutNotification',
        'wireless' => 'getWireless',
        'dno' => 'getDno',
        'alt_spid' => 'getAltSpid',
        'end_user' => 'getEndUser',
        'tn_feature' => 'getTnFeature'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['tn'] = $data['tn'] ?? null;
        $this->container['rate_center'] = $data['rate_center'] ?? null;
        $this->container['trunk_group'] = $data['trunk_group'] ?? null;
        $this->container['routing_option'] = $data['routing_option'] ?? null;
        $this->container['customer_routing_option'] = $data['customer_routing_option'] ?? null;
        $this->container['province'] = $data['province'] ?? null;
        $this->container['tn_status'] = $data['tn_status'] ?? null;
        $this->container['loc_name'] = $data['loc_name'] ?? null;
        $this->container['rate_center_tier'] = $data['rate_center_tier'] ?? null;
        $this->container['lata'] = $data['lata'] ?? null;
        $this->container['country_code'] = $data['country_code'] ?? null;
        $this->container['tn_source'] = $data['tn_source'] ?? null;
        $this->container['activate_date'] = $data['activate_date'] ?? null;
        $this->container['activate_user'] = $data['activate_user'] ?? null;
        $this->container['port_out_pin'] = $data['port_out_pin'] ?? null;
        $this->container['tn_note'] = $data['tn_note'] ?? null;
        $this->container['tn_mgmt_party_role_id'] = $data['tn_mgmt_party_role_id'] ?? null;
        $this->container['tn_mgmt_name'] = $data['tn_mgmt_name'] ?? null;
        $this->container['is_on_net'] = $data['is_on_net'] ?? null;
        $this->container['allow_cnam'] = $data['allow_cnam'] ?? null;
        $this->container['allow_dl'] = $data['allow_dl'] ?? null;
        $this->container['allow_e911'] = $data['allow_e911'] ?? null;
        $this->container['allow_msg'] = $data['allow_msg'] ?? null;
        $this->container['allow_port_out_pin'] = $data['allow_port_out_pin'] ?? null;
        $this->container['portout_notification'] = $data['portout_notification'] ?? null;
        $this->container['wireless'] = $data['wireless'] ?? null;
        $this->container['dno'] = $data['dno'] ?? null;
        $this->container['alt_spid'] = $data['alt_spid'] ?? null;
        $this->container['end_user'] = $data['end_user'] ?? null;
        $this->container['tn_feature'] = $data['tn_feature'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets tn
     *
     * @return string|null
     */
    public function getTn()
    {
        return $this->container['tn'];
    }

    /**
     * Sets tn
     *
     * @param string|null $tn telephone number requested
     *
     * @return self
     */
    public function setTn($tn)
    {
        $this->container['tn'] = $tn;

        return $this;
    }

    /**
     * Gets rate_center
     *
     * @return string|null
     */
    public function getRateCenter()
    {
        return $this->container['rate_center'];
    }

    /**
     * Sets rate_center
     *
     * @param string|null $rate_center rate_center
     *
     * @return self
     */
    public function setRateCenter($rate_center)
    {
        $this->container['rate_center'] = $rate_center;

        return $this;
    }

    /**
     * Gets trunk_group
     *
     * @return string|null
     */
    public function getTrunkGroup()
    {
        return $this->container['trunk_group'];
    }

    /**
     * Sets trunk_group
     *
     * @param string|null $trunk_group trunk group for the telephone number
     *
     * @return self
     */
    public function setTrunkGroup($trunk_group)
    {
        $this->container['trunk_group'] = $trunk_group;

        return $this;
    }

    /**
     * Gets routing_option
     *
     * @return string|null
     */
    public function getRoutingOption()
    {
        return $this->container['routing_option'];
    }

    /**
     * Sets routing_option
     *
     * @param string|null $routing_option routing option for the telephone number
     *
     * @return self
     */
    public function setRoutingOption($routing_option)
    {
        $this->container['routing_option'] = $routing_option;

        return $this;
    }

    /**
     * Gets customer_routing_option
     *
     * @return string|null
     */
    public function getCustomerRoutingOption()
    {
        return $this->container['customer_routing_option'];
    }

    /**
     * Sets customer_routing_option
     *
     * @param string|null $customer_routing_option customer assigned routing option for the telephone number
     *
     * @return self
     */
    public function setCustomerRoutingOption($customer_routing_option)
    {
        $this->container['customer_routing_option'] = $customer_routing_option;

        return $this;
    }

    /**
     * Gets province
     *
     * @return string|null
     */
    public function getProvince()
    {
        return $this->container['province'];
    }

    /**
     * Sets province
     *
     * @param string|null $province province
     *
     * @return self
     */
    public function setProvince($province)
    {
        $this->container['province'] = $province;

        return $this;
    }

    /**
     * Gets tn_status
     *
     * @return string|null
     */
    public function getTnStatus()
    {
        return $this->container['tn_status'];
    }

    /**
     * Sets tn_status
     *
     * @param string|null $tn_status tn_status
     *
     * @return self
     */
    public function setTnStatus($tn_status)
    {
        $this->container['tn_status'] = $tn_status;

        return $this;
    }

    /**
     * Gets loc_name
     *
     * @return string|null
     */
    public function getLocName()
    {
        return $this->container['loc_name'];
    }

    /**
     * Sets loc_name
     *
     * @param string|null $loc_name loc_name
     *
     * @return self
     */
    public function setLocName($loc_name)
    {
        $this->container['loc_name'] = $loc_name;

        return $this;
    }

    /**
     * Gets rate_center_tier
     *
     * @return string|null
     */
    public function getRateCenterTier()
    {
        return $this->container['rate_center_tier'];
    }

    /**
     * Sets rate_center_tier
     *
     * @param string|null $rate_center_tier rate_center_tier
     *
     * @return self
     */
    public function setRateCenterTier($rate_center_tier)
    {
        $this->container['rate_center_tier'] = $rate_center_tier;

        return $this;
    }

    /**
     * Gets lata
     *
     * @return string|null
     */
    public function getLata()
    {
        return $this->container['lata'];
    }

    /**
     * Sets lata
     *
     * @param string|null $lata lata
     *
     * @return self
     */
    public function setLata($lata)
    {
        $this->container['lata'] = $lata;

        return $this;
    }

    /**
     * Gets country_code
     *
     * @return string|null
     */
    public function getCountryCode()
    {
        return $this->container['country_code'];
    }

    /**
     * Sets country_code
     *
     * @param string|null $country_code country_code
     *
     * @return self
     */
    public function setCountryCode($country_code)
    {
        $this->container['country_code'] = $country_code;

        return $this;
    }

    /**
     * Gets tn_source
     *
     * @return string|null
     */
    public function getTnSource()
    {
        return $this->container['tn_source'];
    }

    /**
     * Sets tn_source
     *
     * @param string|null $tn_source tn_source
     *
     * @return self
     */
    public function setTnSource($tn_source)
    {
        $this->container['tn_source'] = $tn_source;

        return $this;
    }

    /**
     * Gets activate_date
     *
     * @return string|null
     */
    public function getActivateDate()
    {
        return $this->container['activate_date'];
    }

    /**
     * Sets activate_date
     *
     * @param string|null $activate_date activate_date
     *
     * @return self
     */
    public function setActivateDate($activate_date)
    {
        $this->container['activate_date'] = $activate_date;

        return $this;
    }

    /**
     * Gets activate_user
     *
     * @return string|null
     */
    public function getActivateUser()
    {
        return $this->container['activate_user'];
    }

    /**
     * Sets activate_user
     *
     * @param string|null $activate_user activate_user
     *
     * @return self
     */
    public function setActivateUser($activate_user)
    {
        $this->container['activate_user'] = $activate_user;

        return $this;
    }

    /**
     * Gets port_out_pin
     *
     * @return string|null
     */
    public function getPortOutPin()
    {
        return $this->container['port_out_pin'];
    }

    /**
     * Sets port_out_pin
     *
     * @param string|null $port_out_pin port_out_pin
     *
     * @return self
     */
    public function setPortOutPin($port_out_pin)
    {
        $this->container['port_out_pin'] = $port_out_pin;

        return $this;
    }

    /**
     * Gets tn_note
     *
     * @return string|null
     */
    public function getTnNote()
    {
        return $this->container['tn_note'];
    }

    /**
     * Sets tn_note
     *
     * @param string|null $tn_note tn_note
     *
     * @return self
     */
    public function setTnNote($tn_note)
    {
        $this->container['tn_note'] = $tn_note;

        return $this;
    }

    /**
     * Gets tn_mgmt_party_role_id
     *
     * @return string|null
     */
    public function getTnMgmtPartyRoleId()
    {
        return $this->container['tn_mgmt_party_role_id'];
    }

    /**
     * Sets tn_mgmt_party_role_id
     *
     * @param string|null $tn_mgmt_party_role_id tn_mgmt_party_role_id
     *
     * @return self
     */
    public function setTnMgmtPartyRoleId($tn_mgmt_party_role_id)
    {
        $this->container['tn_mgmt_party_role_id'] = $tn_mgmt_party_role_id;

        return $this;
    }

    /**
     * Gets tn_mgmt_name
     *
     * @return string|null
     */
    public function getTnMgmtName()
    {
        return $this->container['tn_mgmt_name'];
    }

    /**
     * Sets tn_mgmt_name
     *
     * @param string|null $tn_mgmt_name tn_mgmt_name
     *
     * @return self
     */
    public function setTnMgmtName($tn_mgmt_name)
    {
        $this->container['tn_mgmt_name'] = $tn_mgmt_name;

        return $this;
    }

    /**
     * Gets is_on_net
     *
     * @return string|null
     */
    public function getIsOnNet()
    {
        return $this->container['is_on_net'];
    }

    /**
     * Sets is_on_net
     *
     * @param string|null $is_on_net is_on_net
     *
     * @return self
     */
    public function setIsOnNet($is_on_net)
    {
        $this->container['is_on_net'] = $is_on_net;

        return $this;
    }

    /**
     * Gets allow_cnam
     *
     * @return string|null
     */
    public function getAllowCnam()
    {
        return $this->container['allow_cnam'];
    }

    /**
     * Sets allow_cnam
     *
     * @param string|null $allow_cnam allow_cnam
     *
     * @return self
     */
    public function setAllowCnam($allow_cnam)
    {
        $this->container['allow_cnam'] = $allow_cnam;

        return $this;
    }

    /**
     * Gets allow_dl
     *
     * @return string|null
     */
    public function getAllowDl()
    {
        return $this->container['allow_dl'];
    }

    /**
     * Sets allow_dl
     *
     * @param string|null $allow_dl allow_dl
     *
     * @return self
     */
    public function setAllowDl($allow_dl)
    {
        $this->container['allow_dl'] = $allow_dl;

        return $this;
    }

    /**
     * Gets allow_e911
     *
     * @return string|null
     */
    public function getAllowE911()
    {
        return $this->container['allow_e911'];
    }

    /**
     * Sets allow_e911
     *
     * @param string|null $allow_e911 allow_e911
     *
     * @return self
     */
    public function setAllowE911($allow_e911)
    {
        $this->container['allow_e911'] = $allow_e911;

        return $this;
    }

    /**
     * Gets allow_msg
     *
     * @return string|null
     */
    public function getAllowMsg()
    {
        return $this->container['allow_msg'];
    }

    /**
     * Sets allow_msg
     *
     * @param string|null $allow_msg allow_msg
     *
     * @return self
     */
    public function setAllowMsg($allow_msg)
    {
        $this->container['allow_msg'] = $allow_msg;

        return $this;
    }

    /**
     * Gets allow_port_out_pin
     *
     * @return string|null
     */
    public function getAllowPortOutPin()
    {
        return $this->container['allow_port_out_pin'];
    }

    /**
     * Sets allow_port_out_pin
     *
     * @param string|null $allow_port_out_pin allow_port_out_pin
     *
     * @return self
     */
    public function setAllowPortOutPin($allow_port_out_pin)
    {
        $this->container['allow_port_out_pin'] = $allow_port_out_pin;

        return $this;
    }

    /**
     * Gets portout_notification
     *
     * @return string|null
     */
    public function getPortoutNotification()
    {
        return $this->container['portout_notification'];
    }

    /**
     * Sets portout_notification
     *
     * @param string|null $portout_notification portout_notification
     *
     * @return self
     */
    public function setPortoutNotification($portout_notification)
    {
        $this->container['portout_notification'] = $portout_notification;

        return $this;
    }

    /**
     * Gets wireless
     *
     * @return string|null
     */
    public function getWireless()
    {
        return $this->container['wireless'];
    }

    /**
     * Sets wireless
     *
     * @param string|null $wireless wireless
     *
     * @return self
     */
    public function setWireless($wireless)
    {
        $this->container['wireless'] = $wireless;

        return $this;
    }

    /**
     * Gets dno
     *
     * @return string|null
     */
    public function getDno()
    {
        return $this->container['dno'];
    }

    /**
     * Sets dno
     *
     * @param string|null $dno dno
     *
     * @return self
     */
    public function setDno($dno)
    {
        $this->container['dno'] = $dno;

        return $this;
    }

    /**
     * Gets alt_spid
     *
     * @return string|null
     */
    public function getAltSpid()
    {
        return $this->container['alt_spid'];
    }

    /**
     * Sets alt_spid
     *
     * @param string|null $alt_spid alt_spid
     *
     * @return self
     */
    public function setAltSpid($alt_spid)
    {
        $this->container['alt_spid'] = $alt_spid;

        return $this;
    }

    /**
     * Gets end_user
     *
     * @return \OpenAPI\Client\Model\PortInMessagingOrderPortInMessagingOrderTnListEndUser|null
     */
    public function getEndUser()
    {
        return $this->container['end_user'];
    }

    /**
     * Sets end_user
     *
     * @param \OpenAPI\Client\Model\PortInMessagingOrderPortInMessagingOrderTnListEndUser|null $end_user end_user
     *
     * @return self
     */
    public function setEndUser($end_user)
    {
        $this->container['end_user'] = $end_user;

        return $this;
    }

    /**
     * Gets tn_feature
     *
     * @return \OpenAPI\Client\Model\ResponseTnDetailSearchIdTnFeature|null
     */
    public function getTnFeature()
    {
        return $this->container['tn_feature'];
    }

    /**
     * Sets tn_feature
     *
     * @param \OpenAPI\Client\Model\ResponseTnDetailSearchIdTnFeature|null $tn_feature tn_feature
     *
     * @return self
     */
    public function setTnFeature($tn_feature)
    {
        $this->container['tn_feature'] = $tn_feature;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


