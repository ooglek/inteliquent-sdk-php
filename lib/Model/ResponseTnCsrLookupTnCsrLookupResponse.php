<?php
/**
 * ResponseTnCsrLookupTnCsrLookupResponse
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Inteliquent Services API
 *
 * &nbsp; ## Introduction This document explains how to access and use the Inteliquent Services API to integrate your applications with Inteliquent’s for automated processing of telephone number, port-in, and order management operations. <br> Only RESTful protocol is supported (the Services API accepts information in JSON format). Use the following URLs to make API calls:<br> <ul>  <li>Production: https://services.inteliquent.com<br>  <li>Sandbox: https://services-sandbox.inteliquent.com (please use this environment for initial integration testing) </ul> ## Accounts and Access Request an account from Inteliquent (portal.support@inteliquent.com) for the production and sandbox API environments. After an account has been created and API access is enabled for your company, you can retrieve your company’s key and secret from the Admin section of the customer portal for the appropriate environment. <p>Access the portal using the following URLs: <ul> <li> Production: https://portal.inteliquent.com <li> Sandbox: https://portal-sandbox.inteliquent.com </ul> ### Security The Inteliquent Services API accepts HTTPS connections using TLS version 1.2. ### Authentication Two forms of authentication are supported by Services API:<br> <ul>  <li>OAuth2 Authentication and Authorization<br>  <li>Basic Authentication<br> </ul> <br><br> &nbsp; ### OAuth 2.0 <br><br> OAuth 2.0 is the authentication and authorization mechanism for the Inteliquent Services API. Your application must pass the correct token in the HTTP header to make API calls to Inteliquent. <br> Your application can request a token from the Inteliquent Token Generator with your consumer key and secret, as shown below. Tokens expire after one hour.<br><br> <b>Example Request (using curl):</b><br> <code>curl -X POST -H \"Content-Type:application/x-www-form-urlencoded\" –H \"charset:UTF-8\" https://services-token.inteliquent.com/oauth2/token --insecure --data \"client_id=YOURCONSUMERKEY&client_secret=YOURCONSUMERSECRET&grant_type=client_credentials\"</code><br> <b>Example Response:</b><br> <code>{\"scope\":\"am_application_scope default\",\"token_type\":\"bearer\",\"expires_in\":9223372036854775807,\"access_token\":\"a12b34567c89012def34g56789hi0j12\"}</code><br><br> Note- Substitute “services-token-sandbox” for “services-token” in the above URL to retrieve your token for the sandbox environment. <br><br> &nbsp; ### Authorization <br><br>  You must provide the token as part of the HTTP Header each time you make an API call.<br> When your application calls the Inteliquent services API, the API first validates that the OAuth2.0 token is valid. If so, the service call will be executed. If not, the following error message will be returned: <br> <code> <ams:fault xmlns:ams=\"http://wso2.org/apimanager/security\"> <ams:code>900901</ams:code> <ams:message>Invalid Credentials</ams:message> <ams:description>Access failure for API: /Services/2.0.0, version: 2.0.0 with key: Abcd1FghIjK23l4mno5pqrX6yzab. Make sure you have given the correct access token</ams:description> </ams:fault></code> <br><br> &nbsp; ### Basic Authentication <br><br> You can use your API Key and Secret to set the Basic Authorization header.<br><br> <b> Example Request: </b> <br> Authorization: Basic Base64 encoded(Key:Secret)  <br><br> When your application calls the Inteliquent Services API, the API first validates that the Basic Auth is valid. If so, the service call will be executed. If not, the following error message will be returned:<br><br> { \"message\": \"Invalid authentication information provided\", \"status\": \"Invalid credentials\", \"statusCode\": \"401001\", \"timestamp\": \"2019-12-10T14:07:32.310-0600\" } <br><br> &nbsp;
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: portal.support@inteliquent.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ResponseTnCsrLookupTnCsrLookupResponse Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class ResponseTnCsrLookupTnCsrLookupResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ResponseTnCsrLookup_tnCsrLookupResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'tn' => 'string',
        'account_num' => 'string',
        'atn' => 'string',
        'end_user' => 'string',
        'end_user_address' => 'string',
        'street_num' => 'string',
        'street_pre_dir' => 'string',
        'street_name' => 'string',
        'street_type' => 'string',
        'street_post_dir' => 'string',
        'location_type1' => 'string',
        'location_value1' => 'string',
        'location_type2' => 'string',
        'location_value2' => 'string',
        'location_type3' => 'string',
        'location_value3' => 'string',
        'city' => 'string',
        'state' => 'string',
        'postal_code' => 'string',
        'type_of_service' => 'string',
        'service_provider' => 'string',
        'ocn' => 'string',
        'num_of_service_locations' => 'int',
        'num_of_tn_lines' => 'int',
        'auth_name' => 'string',
        'auth_date' => 'string',
        'earliest_scheduled_date' => 'string',
        'remarks' => 'string',
        'lsr_requirements' => 'string',
        'simple_port' => 'string',
        'csr_lookup_msg' => 'string',
        'csr_lookup_result' => 'int',
        'tn_group' => '\OpenAPI\Client\Model\ResponseTnCsrLookupTnCsrLookupResponseTnGroup[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'tn' => null,
        'account_num' => null,
        'atn' => null,
        'end_user' => null,
        'end_user_address' => null,
        'street_num' => null,
        'street_pre_dir' => null,
        'street_name' => null,
        'street_type' => null,
        'street_post_dir' => null,
        'location_type1' => null,
        'location_value1' => null,
        'location_type2' => null,
        'location_value2' => null,
        'location_type3' => null,
        'location_value3' => null,
        'city' => null,
        'state' => null,
        'postal_code' => null,
        'type_of_service' => null,
        'service_provider' => null,
        'ocn' => null,
        'num_of_service_locations' => null,
        'num_of_tn_lines' => null,
        'auth_name' => null,
        'auth_date' => null,
        'earliest_scheduled_date' => null,
        'remarks' => null,
        'lsr_requirements' => null,
        'simple_port' => null,
        'csr_lookup_msg' => null,
        'csr_lookup_result' => null,
        'tn_group' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'tn' => 'tn',
        'account_num' => 'accountNum',
        'atn' => 'atn',
        'end_user' => 'endUser',
        'end_user_address' => 'endUserAddress',
        'street_num' => 'streetNum',
        'street_pre_dir' => 'streetPreDir',
        'street_name' => 'streetName',
        'street_type' => 'streetType',
        'street_post_dir' => 'streetPostDir',
        'location_type1' => 'locationType1',
        'location_value1' => 'locationValue1',
        'location_type2' => 'locationType2',
        'location_value2' => 'locationValue2',
        'location_type3' => 'locationType3',
        'location_value3' => 'locationValue3',
        'city' => 'city',
        'state' => 'state',
        'postal_code' => 'postalCode',
        'type_of_service' => 'typeOfService',
        'service_provider' => 'serviceProvider',
        'ocn' => 'ocn',
        'num_of_service_locations' => 'numOfServiceLocations',
        'num_of_tn_lines' => 'numOfTnLines',
        'auth_name' => 'authName',
        'auth_date' => 'authDate',
        'earliest_scheduled_date' => 'earliestScheduledDate',
        'remarks' => 'remarks',
        'lsr_requirements' => 'lsrRequirements',
        'simple_port' => 'simplePort',
        'csr_lookup_msg' => 'csrLookupMsg',
        'csr_lookup_result' => 'csrLookupResult',
        'tn_group' => 'tnGroup'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'tn' => 'setTn',
        'account_num' => 'setAccountNum',
        'atn' => 'setAtn',
        'end_user' => 'setEndUser',
        'end_user_address' => 'setEndUserAddress',
        'street_num' => 'setStreetNum',
        'street_pre_dir' => 'setStreetPreDir',
        'street_name' => 'setStreetName',
        'street_type' => 'setStreetType',
        'street_post_dir' => 'setStreetPostDir',
        'location_type1' => 'setLocationType1',
        'location_value1' => 'setLocationValue1',
        'location_type2' => 'setLocationType2',
        'location_value2' => 'setLocationValue2',
        'location_type3' => 'setLocationType3',
        'location_value3' => 'setLocationValue3',
        'city' => 'setCity',
        'state' => 'setState',
        'postal_code' => 'setPostalCode',
        'type_of_service' => 'setTypeOfService',
        'service_provider' => 'setServiceProvider',
        'ocn' => 'setOcn',
        'num_of_service_locations' => 'setNumOfServiceLocations',
        'num_of_tn_lines' => 'setNumOfTnLines',
        'auth_name' => 'setAuthName',
        'auth_date' => 'setAuthDate',
        'earliest_scheduled_date' => 'setEarliestScheduledDate',
        'remarks' => 'setRemarks',
        'lsr_requirements' => 'setLsrRequirements',
        'simple_port' => 'setSimplePort',
        'csr_lookup_msg' => 'setCsrLookupMsg',
        'csr_lookup_result' => 'setCsrLookupResult',
        'tn_group' => 'setTnGroup'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'tn' => 'getTn',
        'account_num' => 'getAccountNum',
        'atn' => 'getAtn',
        'end_user' => 'getEndUser',
        'end_user_address' => 'getEndUserAddress',
        'street_num' => 'getStreetNum',
        'street_pre_dir' => 'getStreetPreDir',
        'street_name' => 'getStreetName',
        'street_type' => 'getStreetType',
        'street_post_dir' => 'getStreetPostDir',
        'location_type1' => 'getLocationType1',
        'location_value1' => 'getLocationValue1',
        'location_type2' => 'getLocationType2',
        'location_value2' => 'getLocationValue2',
        'location_type3' => 'getLocationType3',
        'location_value3' => 'getLocationValue3',
        'city' => 'getCity',
        'state' => 'getState',
        'postal_code' => 'getPostalCode',
        'type_of_service' => 'getTypeOfService',
        'service_provider' => 'getServiceProvider',
        'ocn' => 'getOcn',
        'num_of_service_locations' => 'getNumOfServiceLocations',
        'num_of_tn_lines' => 'getNumOfTnLines',
        'auth_name' => 'getAuthName',
        'auth_date' => 'getAuthDate',
        'earliest_scheduled_date' => 'getEarliestScheduledDate',
        'remarks' => 'getRemarks',
        'lsr_requirements' => 'getLsrRequirements',
        'simple_port' => 'getSimplePort',
        'csr_lookup_msg' => 'getCsrLookupMsg',
        'csr_lookup_result' => 'getCsrLookupResult',
        'tn_group' => 'getTnGroup'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['tn'] = $data['tn'] ?? null;
        $this->container['account_num'] = $data['account_num'] ?? null;
        $this->container['atn'] = $data['atn'] ?? null;
        $this->container['end_user'] = $data['end_user'] ?? null;
        $this->container['end_user_address'] = $data['end_user_address'] ?? null;
        $this->container['street_num'] = $data['street_num'] ?? null;
        $this->container['street_pre_dir'] = $data['street_pre_dir'] ?? null;
        $this->container['street_name'] = $data['street_name'] ?? null;
        $this->container['street_type'] = $data['street_type'] ?? null;
        $this->container['street_post_dir'] = $data['street_post_dir'] ?? null;
        $this->container['location_type1'] = $data['location_type1'] ?? null;
        $this->container['location_value1'] = $data['location_value1'] ?? null;
        $this->container['location_type2'] = $data['location_type2'] ?? null;
        $this->container['location_value2'] = $data['location_value2'] ?? null;
        $this->container['location_type3'] = $data['location_type3'] ?? null;
        $this->container['location_value3'] = $data['location_value3'] ?? null;
        $this->container['city'] = $data['city'] ?? null;
        $this->container['state'] = $data['state'] ?? null;
        $this->container['postal_code'] = $data['postal_code'] ?? null;
        $this->container['type_of_service'] = $data['type_of_service'] ?? null;
        $this->container['service_provider'] = $data['service_provider'] ?? null;
        $this->container['ocn'] = $data['ocn'] ?? null;
        $this->container['num_of_service_locations'] = $data['num_of_service_locations'] ?? null;
        $this->container['num_of_tn_lines'] = $data['num_of_tn_lines'] ?? null;
        $this->container['auth_name'] = $data['auth_name'] ?? null;
        $this->container['auth_date'] = $data['auth_date'] ?? null;
        $this->container['earliest_scheduled_date'] = $data['earliest_scheduled_date'] ?? null;
        $this->container['remarks'] = $data['remarks'] ?? null;
        $this->container['lsr_requirements'] = $data['lsr_requirements'] ?? null;
        $this->container['simple_port'] = $data['simple_port'] ?? null;
        $this->container['csr_lookup_msg'] = $data['csr_lookup_msg'] ?? null;
        $this->container['csr_lookup_result'] = $data['csr_lookup_result'] ?? null;
        $this->container['tn_group'] = $data['tn_group'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets tn
     *
     * @return string|null
     */
    public function getTn()
    {
        return $this->container['tn'];
    }

    /**
     * Sets tn
     *
     * @param string|null $tn Telephone Number
     *
     * @return self
     */
    public function setTn($tn)
    {
        $this->container['tn'] = $tn;

        return $this;
    }

    /**
     * Gets account_num
     *
     * @return string|null
     */
    public function getAccountNum()
    {
        return $this->container['account_num'];
    }

    /**
     * Sets account_num
     *
     * @param string|null $account_num Account Number
     *
     * @return self
     */
    public function setAccountNum($account_num)
    {
        $this->container['account_num'] = $account_num;

        return $this;
    }

    /**
     * Gets atn
     *
     * @return string|null
     */
    public function getAtn()
    {
        return $this->container['atn'];
    }

    /**
     * Sets atn
     *
     * @param string|null $atn Account Telephone Number
     *
     * @return self
     */
    public function setAtn($atn)
    {
        $this->container['atn'] = $atn;

        return $this;
    }

    /**
     * Gets end_user
     *
     * @return string|null
     */
    public function getEndUser()
    {
        return $this->container['end_user'];
    }

    /**
     * Sets end_user
     *
     * @param string|null $end_user EndUser name
     *
     * @return self
     */
    public function setEndUser($end_user)
    {
        $this->container['end_user'] = $end_user;

        return $this;
    }

    /**
     * Gets end_user_address
     *
     * @return string|null
     */
    public function getEndUserAddress()
    {
        return $this->container['end_user_address'];
    }

    /**
     * Sets end_user_address
     *
     * @param string|null $end_user_address EndUser Address
     *
     * @return self
     */
    public function setEndUserAddress($end_user_address)
    {
        $this->container['end_user_address'] = $end_user_address;

        return $this;
    }

    /**
     * Gets street_num
     *
     * @return string|null
     */
    public function getStreetNum()
    {
        return $this->container['street_num'];
    }

    /**
     * Sets street_num
     *
     * @param string|null $street_num End user address street number (ex: 100, 550)
     *
     * @return self
     */
    public function setStreetNum($street_num)
    {
        $this->container['street_num'] = $street_num;

        return $this;
    }

    /**
     * Gets street_pre_dir
     *
     * @return string|null
     */
    public function getStreetPreDir()
    {
        return $this->container['street_pre_dir'];
    }

    /**
     * Sets street_pre_dir
     *
     * @param string|null $street_pre_dir End user address street direction prefix (ex: N)
     *
     * @return self
     */
    public function setStreetPreDir($street_pre_dir)
    {
        $this->container['street_pre_dir'] = $street_pre_dir;

        return $this;
    }

    /**
     * Gets street_name
     *
     * @return string|null
     */
    public function getStreetName()
    {
        return $this->container['street_name'];
    }

    /**
     * Sets street_name
     *
     * @param string|null $street_name End user address street name
     *
     * @return self
     */
    public function setStreetName($street_name)
    {
        $this->container['street_name'] = $street_name;

        return $this;
    }

    /**
     * Gets street_type
     *
     * @return string|null
     */
    public function getStreetType()
    {
        return $this->container['street_type'];
    }

    /**
     * Sets street_type
     *
     * @param string|null $street_type End user address street type (ex: St, Ave)
     *
     * @return self
     */
    public function setStreetType($street_type)
    {
        $this->container['street_type'] = $street_type;

        return $this;
    }

    /**
     * Gets street_post_dir
     *
     * @return string|null
     */
    public function getStreetPostDir()
    {
        return $this->container['street_post_dir'];
    }

    /**
     * Sets street_post_dir
     *
     * @param string|null $street_post_dir End user address street direction ending (ex: SW)
     *
     * @return self
     */
    public function setStreetPostDir($street_post_dir)
    {
        $this->container['street_post_dir'] = $street_post_dir;

        return $this;
    }

    /**
     * Gets location_type1
     *
     * @return string|null
     */
    public function getLocationType1()
    {
        return $this->container['location_type1'];
    }

    /**
     * Sets location_type1
     *
     * @param string|null $location_type1 End user address location type 1 (ex: Bld, Apt)
     *
     * @return self
     */
    public function setLocationType1($location_type1)
    {
        $this->container['location_type1'] = $location_type1;

        return $this;
    }

    /**
     * Gets location_value1
     *
     * @return string|null
     */
    public function getLocationValue1()
    {
        return $this->container['location_value1'];
    }

    /**
     * Sets location_value1
     *
     * @param string|null $location_value1 End user address location value 1 (ex: 1, 2B)
     *
     * @return self
     */
    public function setLocationValue1($location_value1)
    {
        $this->container['location_value1'] = $location_value1;

        return $this;
    }

    /**
     * Gets location_type2
     *
     * @return string|null
     */
    public function getLocationType2()
    {
        return $this->container['location_type2'];
    }

    /**
     * Sets location_type2
     *
     * @param string|null $location_type2 End user address location type 2 (ex: Flr, Ste)
     *
     * @return self
     */
    public function setLocationType2($location_type2)
    {
        $this->container['location_type2'] = $location_type2;

        return $this;
    }

    /**
     * Gets location_value2
     *
     * @return string|null
     */
    public function getLocationValue2()
    {
        return $this->container['location_value2'];
    }

    /**
     * Sets location_value2
     *
     * @param string|null $location_value2 End user address location value 2 (ex: 1, 900)
     *
     * @return self
     */
    public function setLocationValue2($location_value2)
    {
        $this->container['location_value2'] = $location_value2;

        return $this;
    }

    /**
     * Gets location_type3
     *
     * @return string|null
     */
    public function getLocationType3()
    {
        return $this->container['location_type3'];
    }

    /**
     * Sets location_type3
     *
     * @param string|null $location_type3 End user address location type 3 (ex: Flr, Ste)
     *
     * @return self
     */
    public function setLocationType3($location_type3)
    {
        $this->container['location_type3'] = $location_type3;

        return $this;
    }

    /**
     * Gets location_value3
     *
     * @return string|null
     */
    public function getLocationValue3()
    {
        return $this->container['location_value3'];
    }

    /**
     * Sets location_value3
     *
     * @param string|null $location_value3 End user address location value 3 (ex: 1, 900)
     *
     * @return self
     */
    public function setLocationValue3($location_value3)
    {
        $this->container['location_value3'] = $location_value3;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string|null
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string|null $city End user address city
     *
     * @return self
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string|null
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string|null $state End user address state
     *
     * @return self
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets postal_code
     *
     * @return string|null
     */
    public function getPostalCode()
    {
        return $this->container['postal_code'];
    }

    /**
     * Sets postal_code
     *
     * @param string|null $postal_code End user address zip code
     *
     * @return self
     */
    public function setPostalCode($postal_code)
    {
        $this->container['postal_code'] = $postal_code;

        return $this;
    }

    /**
     * Gets type_of_service
     *
     * @return string|null
     */
    public function getTypeOfService()
    {
        return $this->container['type_of_service'];
    }

    /**
     * Sets type_of_service
     *
     * @param string|null $type_of_service Type Of Service (B/R)
     *
     * @return self
     */
    public function setTypeOfService($type_of_service)
    {
        $this->container['type_of_service'] = $type_of_service;

        return $this;
    }

    /**
     * Gets service_provider
     *
     * @return string|null
     */
    public function getServiceProvider()
    {
        return $this->container['service_provider'];
    }

    /**
     * Sets service_provider
     *
     * @param string|null $service_provider Service Provider
     *
     * @return self
     */
    public function setServiceProvider($service_provider)
    {
        $this->container['service_provider'] = $service_provider;

        return $this;
    }

    /**
     * Gets ocn
     *
     * @return string|null
     */
    public function getOcn()
    {
        return $this->container['ocn'];
    }

    /**
     * Sets ocn
     *
     * @param string|null $ocn Operating Company Number
     *
     * @return self
     */
    public function setOcn($ocn)
    {
        $this->container['ocn'] = $ocn;

        return $this;
    }

    /**
     * Gets num_of_service_locations
     *
     * @return int|null
     */
    public function getNumOfServiceLocations()
    {
        return $this->container['num_of_service_locations'];
    }

    /**
     * Sets num_of_service_locations
     *
     * @param int|null $num_of_service_locations Number of Service Locations
     *
     * @return self
     */
    public function setNumOfServiceLocations($num_of_service_locations)
    {
        $this->container['num_of_service_locations'] = $num_of_service_locations;

        return $this;
    }

    /**
     * Gets num_of_tn_lines
     *
     * @return int|null
     */
    public function getNumOfTnLines()
    {
        return $this->container['num_of_tn_lines'];
    }

    /**
     * Sets num_of_tn_lines
     *
     * @param int|null $num_of_tn_lines Number of Telephone Lines
     *
     * @return self
     */
    public function setNumOfTnLines($num_of_tn_lines)
    {
        $this->container['num_of_tn_lines'] = $num_of_tn_lines;

        return $this;
    }

    /**
     * Gets auth_name
     *
     * @return string|null
     */
    public function getAuthName()
    {
        return $this->container['auth_name'];
    }

    /**
     * Sets auth_name
     *
     * @param string|null $auth_name Name of port-in authorizer
     *
     * @return self
     */
    public function setAuthName($auth_name)
    {
        $this->container['auth_name'] = $auth_name;

        return $this;
    }

    /**
     * Gets auth_date
     *
     * @return string|null
     */
    public function getAuthDate()
    {
        return $this->container['auth_date'];
    }

    /**
     * Sets auth_date
     *
     * @param string|null $auth_date Date of port-in authorization
     *
     * @return self
     */
    public function setAuthDate($auth_date)
    {
        $this->container['auth_date'] = $auth_date;

        return $this;
    }

    /**
     * Gets earliest_scheduled_date
     *
     * @return string|null
     */
    public function getEarliestScheduledDate()
    {
        return $this->container['earliest_scheduled_date'];
    }

    /**
     * Sets earliest_scheduled_date
     *
     * @param string|null $earliest_scheduled_date Earliest Scheduled Date
     *
     * @return self
     */
    public function setEarliestScheduledDate($earliest_scheduled_date)
    {
        $this->container['earliest_scheduled_date'] = $earliest_scheduled_date;

        return $this;
    }

    /**
     * Gets remarks
     *
     * @return string|null
     */
    public function getRemarks()
    {
        return $this->container['remarks'];
    }

    /**
     * Sets remarks
     *
     * @param string|null $remarks Additional Instructions
     *
     * @return self
     */
    public function setRemarks($remarks)
    {
        $this->container['remarks'] = $remarks;

        return $this;
    }

    /**
     * Gets lsr_requirements
     *
     * @return string|null
     */
    public function getLsrRequirements()
    {
        return $this->container['lsr_requirements'];
    }

    /**
     * Sets lsr_requirements
     *
     * @param string|null $lsr_requirements LSR Requirements(if any)
     *
     * @return self
     */
    public function setLsrRequirements($lsr_requirements)
    {
        $this->container['lsr_requirements'] = $lsr_requirements;

        return $this;
    }

    /**
     * Gets simple_port
     *
     * @return string|null
     */
    public function getSimplePort()
    {
        return $this->container['simple_port'];
    }

    /**
     * Sets simple_port
     *
     * @param string|null $simple_port Is it SimplePort (Y/N)
     *
     * @return self
     */
    public function setSimplePort($simple_port)
    {
        $this->container['simple_port'] = $simple_port;

        return $this;
    }

    /**
     * Gets csr_lookup_msg
     *
     * @return string|null
     */
    public function getCsrLookupMsg()
    {
        return $this->container['csr_lookup_msg'];
    }

    /**
     * Sets csr_lookup_msg
     *
     * @param string|null $csr_lookup_msg Csr Lookup Message
     *
     * @return self
     */
    public function setCsrLookupMsg($csr_lookup_msg)
    {
        $this->container['csr_lookup_msg'] = $csr_lookup_msg;

        return $this;
    }

    /**
     * Gets csr_lookup_result
     *
     * @return int|null
     */
    public function getCsrLookupResult()
    {
        return $this->container['csr_lookup_result'];
    }

    /**
     * Sets csr_lookup_result
     *
     * @param int|null $csr_lookup_result Csr Lookup Result Code (ex: 0, 1, 2)
     *
     * @return self
     */
    public function setCsrLookupResult($csr_lookup_result)
    {
        $this->container['csr_lookup_result'] = $csr_lookup_result;

        return $this;
    }

    /**
     * Gets tn_group
     *
     * @return \OpenAPI\Client\Model\ResponseTnCsrLookupTnCsrLookupResponseTnGroup[]|null
     */
    public function getTnGroup()
    {
        return $this->container['tn_group'];
    }

    /**
     * Sets tn_group
     *
     * @param \OpenAPI\Client\Model\ResponseTnCsrLookupTnCsrLookupResponseTnGroup[]|null $tn_group tn_group
     *
     * @return self
     */
    public function setTnGroup($tn_group)
    {
        $this->container['tn_group'] = $tn_group;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


