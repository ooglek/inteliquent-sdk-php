<?php
/**
 * ResponseTicketDetailTicketDetailList
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Inteliquent Services API
 *
 * &nbsp; ## Introduction This document explains how to access and use the Inteliquent Services API to integrate your applications with Inteliquent’s for automated processing of telephone number, port-in, and order management operations. <br> Only RESTful protocol is supported (the Services API accepts information in JSON format). Use the following URLs to make API calls:<br> <ul>  <li>Production: https://services.inteliquent.com<br>  <li>Sandbox: https://services-sandbox.inteliquent.com (please use this environment for initial integration testing) </ul> ## Accounts and Access Request an account from Inteliquent (portal.support@inteliquent.com) for the production and sandbox API environments. After an account has been created and API access is enabled for your company, you can retrieve your company’s key and secret from the Admin section of the customer portal for the appropriate environment. <p>Access the portal using the following URLs: <ul> <li> Production: https://portal.inteliquent.com <li> Sandbox: https://portal-sandbox.inteliquent.com </ul> ### Security The Inteliquent Services API accepts HTTPS connections using TLS version 1.2. ### Authentication Two forms of authentication are supported by Services API:<br> <ul>  <li>OAuth2 Authentication and Authorization<br>  <li>Basic Authentication<br> </ul> <br><br> &nbsp; ### OAuth 2.0 <br><br> OAuth 2.0 is the authentication and authorization mechanism for the Inteliquent Services API. Your application must pass the correct token in the HTTP header to make API calls to Inteliquent. <br> Your application can request a token from the Inteliquent Token Generator with your consumer key and secret, as shown below. Tokens expire after one hour.<br><br> <b>Example Request (using curl):</b><br> <code>curl -X POST -H \"Content-Type:application/x-www-form-urlencoded\" –H \"charset:UTF-8\" https://services-token.inteliquent.com/oauth2/token --insecure --data \"client_id=YOURCONSUMERKEY&client_secret=YOURCONSUMERSECRET&grant_type=client_credentials\"</code><br> <b>Example Response:</b><br> <code>{\"scope\":\"am_application_scope default\",\"token_type\":\"bearer\",\"expires_in\":9223372036854775807,\"access_token\":\"a12b34567c89012def34g56789hi0j12\"}</code><br><br> Note- Substitute “services-token-sandbox” for “services-token” in the above URL to retrieve your token for the sandbox environment. <br><br> &nbsp; ### Authorization <br><br>  You must provide the token as part of the HTTP Header each time you make an API call.<br> When your application calls the Inteliquent services API, the API first validates that the OAuth2.0 token is valid. If so, the service call will be executed. If not, the following error message will be returned: <br> <code> <ams:fault xmlns:ams=\"http://wso2.org/apimanager/security\"> <ams:code>900901</ams:code> <ams:message>Invalid Credentials</ams:message> <ams:description>Access failure for API: /Services/2.0.0, version: 2.0.0 with key: Abcd1FghIjK23l4mno5pqrX6yzab. Make sure you have given the correct access token</ams:description> </ams:fault></code> <br><br> &nbsp; ### Basic Authentication <br><br> You can use your API Key and Secret to set the Basic Authorization header.<br><br> <b> Example Request: </b> <br> Authorization: Basic Base64 encoded(Key:Secret)  <br><br> When your application calls the Inteliquent Services API, the API first validates that the Basic Auth is valid. If so, the service call will be executed. If not, the following error message will be returned:<br><br> { \"message\": \"Invalid authentication information provided\", \"status\": \"Invalid credentials\", \"statusCode\": \"401001\", \"timestamp\": \"2019-12-10T14:07:32.310-0600\" } <br><br> &nbsp;
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: portal.support@inteliquent.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ResponseTicketDetailTicketDetailList Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class ResponseTicketDetailTicketDetailList implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ResponseTicketDetail_ticketDetailList';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'trouble_ticket_id' => 'int',
        'description' => 'string',
        'market_name' => 'string',
        'region_name' => 'string',
        'operational_market_name' => 'string',
        'occur_date' => '\DateTime',
        'assigned_workgroup_name' => 'string',
        'contact_name' => 'string',
        'country_ref' => 'string',
        'contact_phone' => 'string',
        'contact_phone_extension' => 'string',
        'contact_email_address' => 'string',
        'external_company_ticket' => 'string',
        'trouble_ticket_service' => 'string',
        'trouble_ticket_source' => 'string',
        'trouble_ticket_problem_code' => 'string',
        'trouble_ticket_status' => 'string',
        'trouble_ticket_cause_code' => 'string',
        'trouble_ticket_resolve_code' => 'string',
        'expected_customer_impact' => 'string',
        'enter_date' => '\DateTime',
        'enter_user_display_name' => 'string',
        'resolve_date' => '\DateTime',
        'resolve_user_display_name' => 'string',
        'close_date' => '\DateTime',
        'close_user_display_name' => 'string',
        'update_date' => '\DateTime',
        'update_user_display_name' => 'string',
        'maint_start_date' => '\DateTime',
        'maint_end_date' => '\DateTime',
        'noc_tech_display_name' => 'string',
        'orig_tn' => 'string',
        'term_tn' => 'string',
        'master_trouble_ticket_id' => 'int',
        'planned_close_date' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'trouble_ticket_id' => null,
        'description' => null,
        'market_name' => null,
        'region_name' => null,
        'operational_market_name' => null,
        'occur_date' => 'date',
        'assigned_workgroup_name' => null,
        'contact_name' => null,
        'country_ref' => null,
        'contact_phone' => null,
        'contact_phone_extension' => null,
        'contact_email_address' => null,
        'external_company_ticket' => null,
        'trouble_ticket_service' => null,
        'trouble_ticket_source' => null,
        'trouble_ticket_problem_code' => null,
        'trouble_ticket_status' => null,
        'trouble_ticket_cause_code' => null,
        'trouble_ticket_resolve_code' => null,
        'expected_customer_impact' => null,
        'enter_date' => 'date',
        'enter_user_display_name' => null,
        'resolve_date' => 'date',
        'resolve_user_display_name' => null,
        'close_date' => 'date',
        'close_user_display_name' => null,
        'update_date' => 'date',
        'update_user_display_name' => null,
        'maint_start_date' => 'date',
        'maint_end_date' => 'date',
        'noc_tech_display_name' => null,
        'orig_tn' => null,
        'term_tn' => null,
        'master_trouble_ticket_id' => null,
        'planned_close_date' => 'date'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'trouble_ticket_id' => 'troubleTicketId',
        'description' => 'description',
        'market_name' => 'marketName',
        'region_name' => 'regionName',
        'operational_market_name' => 'operationalMarketName',
        'occur_date' => 'occurDate',
        'assigned_workgroup_name' => 'assignedWorkgroupName',
        'contact_name' => 'contactName',
        'country_ref' => 'countryRef',
        'contact_phone' => 'contactPhone',
        'contact_phone_extension' => 'contactPhoneExtension',
        'contact_email_address' => 'contactEmailAddress',
        'external_company_ticket' => 'externalCompanyTicket',
        'trouble_ticket_service' => 'troubleTicketService',
        'trouble_ticket_source' => 'troubleTicketSource',
        'trouble_ticket_problem_code' => 'troubleTicketProblemCode',
        'trouble_ticket_status' => 'troubleTicketStatus',
        'trouble_ticket_cause_code' => 'troubleTicketCauseCode',
        'trouble_ticket_resolve_code' => 'troubleTicketResolveCode',
        'expected_customer_impact' => 'expectedCustomerImpact',
        'enter_date' => 'enterDate',
        'enter_user_display_name' => 'enterUserDisplayName',
        'resolve_date' => 'resolveDate',
        'resolve_user_display_name' => 'resolveUserDisplayName',
        'close_date' => 'closeDate',
        'close_user_display_name' => 'closeUserDisplayName',
        'update_date' => 'updateDate',
        'update_user_display_name' => 'updateUserDisplayName',
        'maint_start_date' => 'maintStartDate',
        'maint_end_date' => 'maintEndDate',
        'noc_tech_display_name' => 'nocTechDisplayName',
        'orig_tn' => 'origTN',
        'term_tn' => 'termTN',
        'master_trouble_ticket_id' => 'masterTroubleTicketId',
        'planned_close_date' => 'plannedCloseDate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'trouble_ticket_id' => 'setTroubleTicketId',
        'description' => 'setDescription',
        'market_name' => 'setMarketName',
        'region_name' => 'setRegionName',
        'operational_market_name' => 'setOperationalMarketName',
        'occur_date' => 'setOccurDate',
        'assigned_workgroup_name' => 'setAssignedWorkgroupName',
        'contact_name' => 'setContactName',
        'country_ref' => 'setCountryRef',
        'contact_phone' => 'setContactPhone',
        'contact_phone_extension' => 'setContactPhoneExtension',
        'contact_email_address' => 'setContactEmailAddress',
        'external_company_ticket' => 'setExternalCompanyTicket',
        'trouble_ticket_service' => 'setTroubleTicketService',
        'trouble_ticket_source' => 'setTroubleTicketSource',
        'trouble_ticket_problem_code' => 'setTroubleTicketProblemCode',
        'trouble_ticket_status' => 'setTroubleTicketStatus',
        'trouble_ticket_cause_code' => 'setTroubleTicketCauseCode',
        'trouble_ticket_resolve_code' => 'setTroubleTicketResolveCode',
        'expected_customer_impact' => 'setExpectedCustomerImpact',
        'enter_date' => 'setEnterDate',
        'enter_user_display_name' => 'setEnterUserDisplayName',
        'resolve_date' => 'setResolveDate',
        'resolve_user_display_name' => 'setResolveUserDisplayName',
        'close_date' => 'setCloseDate',
        'close_user_display_name' => 'setCloseUserDisplayName',
        'update_date' => 'setUpdateDate',
        'update_user_display_name' => 'setUpdateUserDisplayName',
        'maint_start_date' => 'setMaintStartDate',
        'maint_end_date' => 'setMaintEndDate',
        'noc_tech_display_name' => 'setNocTechDisplayName',
        'orig_tn' => 'setOrigTn',
        'term_tn' => 'setTermTn',
        'master_trouble_ticket_id' => 'setMasterTroubleTicketId',
        'planned_close_date' => 'setPlannedCloseDate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'trouble_ticket_id' => 'getTroubleTicketId',
        'description' => 'getDescription',
        'market_name' => 'getMarketName',
        'region_name' => 'getRegionName',
        'operational_market_name' => 'getOperationalMarketName',
        'occur_date' => 'getOccurDate',
        'assigned_workgroup_name' => 'getAssignedWorkgroupName',
        'contact_name' => 'getContactName',
        'country_ref' => 'getCountryRef',
        'contact_phone' => 'getContactPhone',
        'contact_phone_extension' => 'getContactPhoneExtension',
        'contact_email_address' => 'getContactEmailAddress',
        'external_company_ticket' => 'getExternalCompanyTicket',
        'trouble_ticket_service' => 'getTroubleTicketService',
        'trouble_ticket_source' => 'getTroubleTicketSource',
        'trouble_ticket_problem_code' => 'getTroubleTicketProblemCode',
        'trouble_ticket_status' => 'getTroubleTicketStatus',
        'trouble_ticket_cause_code' => 'getTroubleTicketCauseCode',
        'trouble_ticket_resolve_code' => 'getTroubleTicketResolveCode',
        'expected_customer_impact' => 'getExpectedCustomerImpact',
        'enter_date' => 'getEnterDate',
        'enter_user_display_name' => 'getEnterUserDisplayName',
        'resolve_date' => 'getResolveDate',
        'resolve_user_display_name' => 'getResolveUserDisplayName',
        'close_date' => 'getCloseDate',
        'close_user_display_name' => 'getCloseUserDisplayName',
        'update_date' => 'getUpdateDate',
        'update_user_display_name' => 'getUpdateUserDisplayName',
        'maint_start_date' => 'getMaintStartDate',
        'maint_end_date' => 'getMaintEndDate',
        'noc_tech_display_name' => 'getNocTechDisplayName',
        'orig_tn' => 'getOrigTn',
        'term_tn' => 'getTermTn',
        'master_trouble_ticket_id' => 'getMasterTroubleTicketId',
        'planned_close_date' => 'getPlannedCloseDate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['trouble_ticket_id'] = $data['trouble_ticket_id'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['market_name'] = $data['market_name'] ?? null;
        $this->container['region_name'] = $data['region_name'] ?? null;
        $this->container['operational_market_name'] = $data['operational_market_name'] ?? null;
        $this->container['occur_date'] = $data['occur_date'] ?? null;
        $this->container['assigned_workgroup_name'] = $data['assigned_workgroup_name'] ?? null;
        $this->container['contact_name'] = $data['contact_name'] ?? null;
        $this->container['country_ref'] = $data['country_ref'] ?? null;
        $this->container['contact_phone'] = $data['contact_phone'] ?? null;
        $this->container['contact_phone_extension'] = $data['contact_phone_extension'] ?? null;
        $this->container['contact_email_address'] = $data['contact_email_address'] ?? null;
        $this->container['external_company_ticket'] = $data['external_company_ticket'] ?? null;
        $this->container['trouble_ticket_service'] = $data['trouble_ticket_service'] ?? null;
        $this->container['trouble_ticket_source'] = $data['trouble_ticket_source'] ?? null;
        $this->container['trouble_ticket_problem_code'] = $data['trouble_ticket_problem_code'] ?? null;
        $this->container['trouble_ticket_status'] = $data['trouble_ticket_status'] ?? null;
        $this->container['trouble_ticket_cause_code'] = $data['trouble_ticket_cause_code'] ?? null;
        $this->container['trouble_ticket_resolve_code'] = $data['trouble_ticket_resolve_code'] ?? null;
        $this->container['expected_customer_impact'] = $data['expected_customer_impact'] ?? null;
        $this->container['enter_date'] = $data['enter_date'] ?? null;
        $this->container['enter_user_display_name'] = $data['enter_user_display_name'] ?? null;
        $this->container['resolve_date'] = $data['resolve_date'] ?? null;
        $this->container['resolve_user_display_name'] = $data['resolve_user_display_name'] ?? null;
        $this->container['close_date'] = $data['close_date'] ?? null;
        $this->container['close_user_display_name'] = $data['close_user_display_name'] ?? null;
        $this->container['update_date'] = $data['update_date'] ?? null;
        $this->container['update_user_display_name'] = $data['update_user_display_name'] ?? null;
        $this->container['maint_start_date'] = $data['maint_start_date'] ?? null;
        $this->container['maint_end_date'] = $data['maint_end_date'] ?? null;
        $this->container['noc_tech_display_name'] = $data['noc_tech_display_name'] ?? null;
        $this->container['orig_tn'] = $data['orig_tn'] ?? null;
        $this->container['term_tn'] = $data['term_tn'] ?? null;
        $this->container['master_trouble_ticket_id'] = $data['master_trouble_ticket_id'] ?? null;
        $this->container['planned_close_date'] = $data['planned_close_date'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets trouble_ticket_id
     *
     * @return int|null
     */
    public function getTroubleTicketId()
    {
        return $this->container['trouble_ticket_id'];
    }

    /**
     * Sets trouble_ticket_id
     *
     * @param int|null $trouble_ticket_id Trouble Ticet Id
     *
     * @return self
     */
    public function setTroubleTicketId($trouble_ticket_id)
    {
        $this->container['trouble_ticket_id'] = $trouble_ticket_id;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets market_name
     *
     * @return string|null
     */
    public function getMarketName()
    {
        return $this->container['market_name'];
    }

    /**
     * Sets market_name
     *
     * @param string|null $market_name Market Name
     *
     * @return self
     */
    public function setMarketName($market_name)
    {
        $this->container['market_name'] = $market_name;

        return $this;
    }

    /**
     * Gets region_name
     *
     * @return string|null
     */
    public function getRegionName()
    {
        return $this->container['region_name'];
    }

    /**
     * Sets region_name
     *
     * @param string|null $region_name Region Name
     *
     * @return self
     */
    public function setRegionName($region_name)
    {
        $this->container['region_name'] = $region_name;

        return $this;
    }

    /**
     * Gets operational_market_name
     *
     * @return string|null
     */
    public function getOperationalMarketName()
    {
        return $this->container['operational_market_name'];
    }

    /**
     * Sets operational_market_name
     *
     * @param string|null $operational_market_name Operational Market Name
     *
     * @return self
     */
    public function setOperationalMarketName($operational_market_name)
    {
        $this->container['operational_market_name'] = $operational_market_name;

        return $this;
    }

    /**
     * Gets occur_date
     *
     * @return \DateTime|null
     */
    public function getOccurDate()
    {
        return $this->container['occur_date'];
    }

    /**
     * Sets occur_date
     *
     * @param \DateTime|null $occur_date Occur Date
     *
     * @return self
     */
    public function setOccurDate($occur_date)
    {
        $this->container['occur_date'] = $occur_date;

        return $this;
    }

    /**
     * Gets assigned_workgroup_name
     *
     * @return string|null
     */
    public function getAssignedWorkgroupName()
    {
        return $this->container['assigned_workgroup_name'];
    }

    /**
     * Sets assigned_workgroup_name
     *
     * @param string|null $assigned_workgroup_name Assigned WorkGroup Name
     *
     * @return self
     */
    public function setAssignedWorkgroupName($assigned_workgroup_name)
    {
        $this->container['assigned_workgroup_name'] = $assigned_workgroup_name;

        return $this;
    }

    /**
     * Gets contact_name
     *
     * @return string|null
     */
    public function getContactName()
    {
        return $this->container['contact_name'];
    }

    /**
     * Sets contact_name
     *
     * @param string|null $contact_name Contact Name
     *
     * @return self
     */
    public function setContactName($contact_name)
    {
        $this->container['contact_name'] = $contact_name;

        return $this;
    }

    /**
     * Gets country_ref
     *
     * @return string|null
     */
    public function getCountryRef()
    {
        return $this->container['country_ref'];
    }

    /**
     * Sets country_ref
     *
     * @param string|null $country_ref Country Reference
     *
     * @return self
     */
    public function setCountryRef($country_ref)
    {
        $this->container['country_ref'] = $country_ref;

        return $this;
    }

    /**
     * Gets contact_phone
     *
     * @return string|null
     */
    public function getContactPhone()
    {
        return $this->container['contact_phone'];
    }

    /**
     * Sets contact_phone
     *
     * @param string|null $contact_phone Trouble Ticket Contact Phone
     *
     * @return self
     */
    public function setContactPhone($contact_phone)
    {
        $this->container['contact_phone'] = $contact_phone;

        return $this;
    }

    /**
     * Gets contact_phone_extension
     *
     * @return string|null
     */
    public function getContactPhoneExtension()
    {
        return $this->container['contact_phone_extension'];
    }

    /**
     * Sets contact_phone_extension
     *
     * @param string|null $contact_phone_extension Contact Phone Extension
     *
     * @return self
     */
    public function setContactPhoneExtension($contact_phone_extension)
    {
        $this->container['contact_phone_extension'] = $contact_phone_extension;

        return $this;
    }

    /**
     * Gets contact_email_address
     *
     * @return string|null
     */
    public function getContactEmailAddress()
    {
        return $this->container['contact_email_address'];
    }

    /**
     * Sets contact_email_address
     *
     * @param string|null $contact_email_address Contact Email Address
     *
     * @return self
     */
    public function setContactEmailAddress($contact_email_address)
    {
        $this->container['contact_email_address'] = $contact_email_address;

        return $this;
    }

    /**
     * Gets external_company_ticket
     *
     * @return string|null
     */
    public function getExternalCompanyTicket()
    {
        return $this->container['external_company_ticket'];
    }

    /**
     * Sets external_company_ticket
     *
     * @param string|null $external_company_ticket External COmpany Ticket
     *
     * @return self
     */
    public function setExternalCompanyTicket($external_company_ticket)
    {
        $this->container['external_company_ticket'] = $external_company_ticket;

        return $this;
    }

    /**
     * Gets trouble_ticket_service
     *
     * @return string|null
     */
    public function getTroubleTicketService()
    {
        return $this->container['trouble_ticket_service'];
    }

    /**
     * Sets trouble_ticket_service
     *
     * @param string|null $trouble_ticket_service Trouble Ticket Service
     *
     * @return self
     */
    public function setTroubleTicketService($trouble_ticket_service)
    {
        $this->container['trouble_ticket_service'] = $trouble_ticket_service;

        return $this;
    }

    /**
     * Gets trouble_ticket_source
     *
     * @return string|null
     */
    public function getTroubleTicketSource()
    {
        return $this->container['trouble_ticket_source'];
    }

    /**
     * Sets trouble_ticket_source
     *
     * @param string|null $trouble_ticket_source Type Trouble Ticket Service Name
     *
     * @return self
     */
    public function setTroubleTicketSource($trouble_ticket_source)
    {
        $this->container['trouble_ticket_source'] = $trouble_ticket_source;

        return $this;
    }

    /**
     * Gets trouble_ticket_problem_code
     *
     * @return string|null
     */
    public function getTroubleTicketProblemCode()
    {
        return $this->container['trouble_ticket_problem_code'];
    }

    /**
     * Sets trouble_ticket_problem_code
     *
     * @param string|null $trouble_ticket_problem_code Trouble Ticket Problem Code
     *
     * @return self
     */
    public function setTroubleTicketProblemCode($trouble_ticket_problem_code)
    {
        $this->container['trouble_ticket_problem_code'] = $trouble_ticket_problem_code;

        return $this;
    }

    /**
     * Gets trouble_ticket_status
     *
     * @return string|null
     */
    public function getTroubleTicketStatus()
    {
        return $this->container['trouble_ticket_status'];
    }

    /**
     * Sets trouble_ticket_status
     *
     * @param string|null $trouble_ticket_status Trouble Ticket Status
     *
     * @return self
     */
    public function setTroubleTicketStatus($trouble_ticket_status)
    {
        $this->container['trouble_ticket_status'] = $trouble_ticket_status;

        return $this;
    }

    /**
     * Gets trouble_ticket_cause_code
     *
     * @return string|null
     */
    public function getTroubleTicketCauseCode()
    {
        return $this->container['trouble_ticket_cause_code'];
    }

    /**
     * Sets trouble_ticket_cause_code
     *
     * @param string|null $trouble_ticket_cause_code Trouble Ticket Cause Code
     *
     * @return self
     */
    public function setTroubleTicketCauseCode($trouble_ticket_cause_code)
    {
        $this->container['trouble_ticket_cause_code'] = $trouble_ticket_cause_code;

        return $this;
    }

    /**
     * Gets trouble_ticket_resolve_code
     *
     * @return string|null
     */
    public function getTroubleTicketResolveCode()
    {
        return $this->container['trouble_ticket_resolve_code'];
    }

    /**
     * Sets trouble_ticket_resolve_code
     *
     * @param string|null $trouble_ticket_resolve_code Trouble Ticket Resolve Code
     *
     * @return self
     */
    public function setTroubleTicketResolveCode($trouble_ticket_resolve_code)
    {
        $this->container['trouble_ticket_resolve_code'] = $trouble_ticket_resolve_code;

        return $this;
    }

    /**
     * Gets expected_customer_impact
     *
     * @return string|null
     */
    public function getExpectedCustomerImpact()
    {
        return $this->container['expected_customer_impact'];
    }

    /**
     * Sets expected_customer_impact
     *
     * @param string|null $expected_customer_impact Expected Customer Impact
     *
     * @return self
     */
    public function setExpectedCustomerImpact($expected_customer_impact)
    {
        $this->container['expected_customer_impact'] = $expected_customer_impact;

        return $this;
    }

    /**
     * Gets enter_date
     *
     * @return \DateTime|null
     */
    public function getEnterDate()
    {
        return $this->container['enter_date'];
    }

    /**
     * Sets enter_date
     *
     * @param \DateTime|null $enter_date Enter Date
     *
     * @return self
     */
    public function setEnterDate($enter_date)
    {
        $this->container['enter_date'] = $enter_date;

        return $this;
    }

    /**
     * Gets enter_user_display_name
     *
     * @return string|null
     */
    public function getEnterUserDisplayName()
    {
        return $this->container['enter_user_display_name'];
    }

    /**
     * Sets enter_user_display_name
     *
     * @param string|null $enter_user_display_name Enter user Display name
     *
     * @return self
     */
    public function setEnterUserDisplayName($enter_user_display_name)
    {
        $this->container['enter_user_display_name'] = $enter_user_display_name;

        return $this;
    }

    /**
     * Gets resolve_date
     *
     * @return \DateTime|null
     */
    public function getResolveDate()
    {
        return $this->container['resolve_date'];
    }

    /**
     * Sets resolve_date
     *
     * @param \DateTime|null $resolve_date Resolve Date
     *
     * @return self
     */
    public function setResolveDate($resolve_date)
    {
        $this->container['resolve_date'] = $resolve_date;

        return $this;
    }

    /**
     * Gets resolve_user_display_name
     *
     * @return string|null
     */
    public function getResolveUserDisplayName()
    {
        return $this->container['resolve_user_display_name'];
    }

    /**
     * Sets resolve_user_display_name
     *
     * @param string|null $resolve_user_display_name Resolve User Display Name
     *
     * @return self
     */
    public function setResolveUserDisplayName($resolve_user_display_name)
    {
        $this->container['resolve_user_display_name'] = $resolve_user_display_name;

        return $this;
    }

    /**
     * Gets close_date
     *
     * @return \DateTime|null
     */
    public function getCloseDate()
    {
        return $this->container['close_date'];
    }

    /**
     * Sets close_date
     *
     * @param \DateTime|null $close_date Close Date
     *
     * @return self
     */
    public function setCloseDate($close_date)
    {
        $this->container['close_date'] = $close_date;

        return $this;
    }

    /**
     * Gets close_user_display_name
     *
     * @return string|null
     */
    public function getCloseUserDisplayName()
    {
        return $this->container['close_user_display_name'];
    }

    /**
     * Sets close_user_display_name
     *
     * @param string|null $close_user_display_name Close User Display Name
     *
     * @return self
     */
    public function setCloseUserDisplayName($close_user_display_name)
    {
        $this->container['close_user_display_name'] = $close_user_display_name;

        return $this;
    }

    /**
     * Gets update_date
     *
     * @return \DateTime|null
     */
    public function getUpdateDate()
    {
        return $this->container['update_date'];
    }

    /**
     * Sets update_date
     *
     * @param \DateTime|null $update_date Update Date
     *
     * @return self
     */
    public function setUpdateDate($update_date)
    {
        $this->container['update_date'] = $update_date;

        return $this;
    }

    /**
     * Gets update_user_display_name
     *
     * @return string|null
     */
    public function getUpdateUserDisplayName()
    {
        return $this->container['update_user_display_name'];
    }

    /**
     * Sets update_user_display_name
     *
     * @param string|null $update_user_display_name Update User Display Name
     *
     * @return self
     */
    public function setUpdateUserDisplayName($update_user_display_name)
    {
        $this->container['update_user_display_name'] = $update_user_display_name;

        return $this;
    }

    /**
     * Gets maint_start_date
     *
     * @return \DateTime|null
     */
    public function getMaintStartDate()
    {
        return $this->container['maint_start_date'];
    }

    /**
     * Sets maint_start_date
     *
     * @param \DateTime|null $maint_start_date Maint Start Date
     *
     * @return self
     */
    public function setMaintStartDate($maint_start_date)
    {
        $this->container['maint_start_date'] = $maint_start_date;

        return $this;
    }

    /**
     * Gets maint_end_date
     *
     * @return \DateTime|null
     */
    public function getMaintEndDate()
    {
        return $this->container['maint_end_date'];
    }

    /**
     * Sets maint_end_date
     *
     * @param \DateTime|null $maint_end_date Maint End Date
     *
     * @return self
     */
    public function setMaintEndDate($maint_end_date)
    {
        $this->container['maint_end_date'] = $maint_end_date;

        return $this;
    }

    /**
     * Gets noc_tech_display_name
     *
     * @return string|null
     */
    public function getNocTechDisplayName()
    {
        return $this->container['noc_tech_display_name'];
    }

    /**
     * Sets noc_tech_display_name
     *
     * @param string|null $noc_tech_display_name noc Tech Display Name
     *
     * @return self
     */
    public function setNocTechDisplayName($noc_tech_display_name)
    {
        $this->container['noc_tech_display_name'] = $noc_tech_display_name;

        return $this;
    }

    /**
     * Gets orig_tn
     *
     * @return string|null
     */
    public function getOrigTn()
    {
        return $this->container['orig_tn'];
    }

    /**
     * Sets orig_tn
     *
     * @param string|null $orig_tn orig TN
     *
     * @return self
     */
    public function setOrigTn($orig_tn)
    {
        $this->container['orig_tn'] = $orig_tn;

        return $this;
    }

    /**
     * Gets term_tn
     *
     * @return string|null
     */
    public function getTermTn()
    {
        return $this->container['term_tn'];
    }

    /**
     * Sets term_tn
     *
     * @param string|null $term_tn term TN
     *
     * @return self
     */
    public function setTermTn($term_tn)
    {
        $this->container['term_tn'] = $term_tn;

        return $this;
    }

    /**
     * Gets master_trouble_ticket_id
     *
     * @return int|null
     */
    public function getMasterTroubleTicketId()
    {
        return $this->container['master_trouble_ticket_id'];
    }

    /**
     * Sets master_trouble_ticket_id
     *
     * @param int|null $master_trouble_ticket_id master_trouble_ticket_id
     *
     * @return self
     */
    public function setMasterTroubleTicketId($master_trouble_ticket_id)
    {
        $this->container['master_trouble_ticket_id'] = $master_trouble_ticket_id;

        return $this;
    }

    /**
     * Gets planned_close_date
     *
     * @return \DateTime|null
     */
    public function getPlannedCloseDate()
    {
        return $this->container['planned_close_date'];
    }

    /**
     * Sets planned_close_date
     *
     * @param \DateTime|null $planned_close_date planned_close_date
     *
     * @return self
     */
    public function setPlannedCloseDate($planned_close_date)
    {
        $this->container['planned_close_date'] = $planned_close_date;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


